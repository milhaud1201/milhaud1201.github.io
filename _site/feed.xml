

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Milhaud</title>
  <subtitle>DeepLearning Lover</subtitle>
  <updated>2023-03-06T00:05:14+09:00</updated>
  <author>
    <name>Milhaud</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2023 Milhaud </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>PyCaret 맛보기</title>
    <link href="http://localhost:4000/posts/%ED%94%BC%EB%A7%88-%EC%9D%B8%EB%94%94%EC%96%B8-with-PyCaret/" rel="alternate" type="text/html" title="PyCaret 맛보기" />
    <published>2022-11-26T18:23:28+09:00</published>
  
    <updated>2022-11-26T18:23:28+09:00</updated>
  
    <id>http://localhost:4000/posts/%ED%94%BC%EB%A7%88-%EC%9D%B8%EB%94%94%EC%96%B8-with-PyCaret/</id>
    <content src="http://localhost:4000/posts/%ED%94%BC%EB%A7%88-%EC%9D%B8%EB%94%94%EC%96%B8-with-PyCaret/" />
    <author>
      <name>Milhaud</name>
    </author>

  
    
    <category term="Programming" />
    
    <category term="Machine Learning" />
    
  

  
    <summary>
      





      피마 인디언 데이터셋 with PyCaret

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import koreanize_matplotlib


Data Load
피마 인디언 당뇨병 데이터 셋

df_pima = pd.read_csv("http://bit.ly/data-diabetes-csv")
df_pima.shape


(768, 9)


PyCaret
당뇨병 여부 분류 문제 적용시

from pycaret.classification import *


setup
Train data, Test data, Label, Target 등을 설정하는 부분이며, 데이터에 전처리 기법들을 ...
    </summary>
  

  </entry>

  
  <entry>
    <title>Time Domain Audio 특징 이해와 구현 with librosa</title>
    <link href="http://localhost:4000/posts/Time-Domain-Audio-%ED%8A%B9%EC%A7%95-%EC%9D%B4%ED%95%B4%EC%99%80-%EA%B5%AC%ED%98%84-with-librosa/" rel="alternate" type="text/html" title="Time Domain Audio 특징 이해와 구현 with librosa" />
    <published>2022-08-07T18:23:28+09:00</published>
  
    <updated>2022-08-07T18:23:28+09:00</updated>
  
    <id>http://localhost:4000/posts/Time-Domain-Audio-%ED%8A%B9%EC%A7%95-%EC%9D%B4%ED%95%B4%EC%99%80-%EA%B5%AC%ED%98%84-with-librosa/</id>
    <content src="http://localhost:4000/posts/Time-Domain-Audio-%ED%8A%B9%EC%A7%95-%EC%9D%B4%ED%95%B4%EC%99%80-%EA%B5%AC%ED%98%84-with-librosa/" />
    <author>
      <name>Milhaud</name>
    </author>

  
    
    <category term="Audio Signal Processing" />
    
  

  
    <summary>
      





      Time-domain 특징

  Amplitude envelope (AE)
  Root-mean-square energy (RMS)
  Zero-crossing rate (ZCR)


Amplitude envelope (AE)

  프레임 내 모든 샘플의 최대 진폭 값
  음량에 대한 대략적인 정보 제공
  Outliers에 민감함
  Onset detection, 음악 장르 분류


Root-mean-square energy (RMS)

  프레임에 있는 모든 표본의 RMS
  음량 표시기
  AE보다 Outliers에 덜 민감함
  오디오 세분화, 음악 장르 분류


Zero-crossing rate (ZCR)

  타악기 소리와 음조 인식
  Monophonic pitch 단음 음조 추정
  음성...
    </summary>
  

  </entry>

  
  <entry>
    <title>PyTorch로 하는 Radio Signals 분류</title>
    <link href="http://localhost:4000/posts/PyTorch%EB%A1%9C-%ED%95%98%EB%8A%94-Radio-Signals-%EB%B6%84%EB%A5%98/" rel="alternate" type="text/html" title="PyTorch로 하는 Radio Signals 분류" />
    <published>2022-08-06T18:23:28+09:00</published>
  
    <updated>2023-03-05T22:07:53+09:00</updated>
  
    <id>http://localhost:4000/posts/PyTorch%EB%A1%9C-%ED%95%98%EB%8A%94-Radio-Signals-%EB%B6%84%EB%A5%98/</id>
    <content src="http://localhost:4000/posts/PyTorch%EB%A1%9C-%ED%95%98%EB%8A%94-Radio-Signals-%EB%B6%84%EB%A5%98/" />
    <author>
      <name>Milhaud</name>
    </author>

  
    
    <category term="Audio Signal Processing" />
    
  

  
    <summary>
      





      개요

  이번 테스크에서는 Sepectrogram이 무엇인지 알 수 있다.
  Sepectrogram의 이미지가 입력값으로 주어진다. 오디오가 있을 때마다 파일 또는 오디오 신호를 Sepectrogram을 사용하여 나타낸다.
  이론적인 부분에서, Covolutional Neural Network의 작동과 Covolutional Neural Network가 무엇인지 분명히 한다.
  Optimization이 어떻게 작동하는지, Gradient decent나 adam과 같은 최적화 유형을 알아야 한다.
  Python 프로그래밍과 PyTorch의 기본기가 명확해야 한다.


Imports

!pip install timm


Installing collected packages: huggingface-...
    </summary>
  

  </entry>

  
  <entry>
    <title>컴퓨터 비전의 분야</title>
    <link href="http://localhost:4000/posts/%EC%BB%B4%ED%93%A8%ED%84%B0-%EB%B9%84%EC%A0%84%EC%9D%98-%EB%B6%84%EC%95%BC/" rel="alternate" type="text/html" title="컴퓨터 비전의 분야" />
    <published>2022-08-06T18:23:28+09:00</published>
  
    <updated>2022-08-06T18:23:28+09:00</updated>
  
    <id>http://localhost:4000/posts/%EC%BB%B4%ED%93%A8%ED%84%B0-%EB%B9%84%EC%A0%84%EC%9D%98-%EB%B6%84%EC%95%BC/</id>
    <content src="http://localhost:4000/posts/%EC%BB%B4%ED%93%A8%ED%84%B0-%EB%B9%84%EC%A0%84%EC%9D%98-%EB%B6%84%EC%95%BC/" />
    <author>
      <name>Milhaud</name>
    </author>

  
    
    <category term="Artificial Intelligence" />
    
    <category term="Basic" />
    
  

  
    <summary>
      





      

    </summary>
  

  </entry>

  
  <entry>
    <title>API를 활용한 LA의 범죄 사건과 피해자 유형 파악과 3D 인터렉티브 맵 시각화</title>
    <link href="http://localhost:4000/posts/API%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-LA%EC%9D%98-%EB%B2%94%EC%A3%84-%EC%82%AC%EA%B1%B4%EA%B3%BC-%ED%94%BC%ED%95%B4%EC%9E%90-%EC%9C%A0%ED%98%95-%ED%8C%8C%EC%95%85%EA%B3%BC-3D-%EC%9D%B8%ED%84%B0%EB%A0%89%ED%8B%B0%EB%B8%8C-%EB%A7%B5-%EC%8B%9C%EA%B0%81%ED%99%94/" rel="alternate" type="text/html" title="API를 활용한 LA의 범죄 사건과 피해자 유형 파악과 3D 인터렉티브 맵 시각화" />
    <published>2022-08-04T18:23:28+09:00</published>
  
    <updated>2023-02-27T14:43:07+09:00</updated>
  
    <id>http://localhost:4000/posts/API%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-LA%EC%9D%98-%EB%B2%94%EC%A3%84-%EC%82%AC%EA%B1%B4%EA%B3%BC-%ED%94%BC%ED%95%B4%EC%9E%90-%EC%9C%A0%ED%98%95-%ED%8C%8C%EC%95%85%EA%B3%BC-3D-%EC%9D%B8%ED%84%B0%EB%A0%89%ED%8B%B0%EB%B8%8C-%EB%A7%B5-%EC%8B%9C%EA%B0%81%ED%99%94/</id>
    <content src="http://localhost:4000/posts/API%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-LA%EC%9D%98-%EB%B2%94%EC%A3%84-%EC%82%AC%EA%B1%B4%EA%B3%BC-%ED%94%BC%ED%95%B4%EC%9E%90-%EC%9C%A0%ED%98%95-%ED%8C%8C%EC%95%85%EA%B3%BC-3D-%EC%9D%B8%ED%84%B0%EB%A0%89%ED%8B%B0%EB%B8%8C-%EB%A7%B5-%EC%8B%9C%EA%B0%81%ED%99%94/" />
    <author>
      <name>Milhaud</name>
    </author>

  
    
    <category term="Data Science" />
    
    <category term="Streamlit" />
    
  

  
    <summary>
      





      Stremlit이란?
데이터 과학자들이 데이터 시각화, 머신러닝 모델링, 웹 애플리케이션 등을 쉽게 만들 수 있도록 도와주는 오픈소스 라이브러리이다. Streamlit을 사용하면 파이썬 코드만으로 웹 애플리케이션을 만들 수 있어서, 데이터 분석과 모델링 결과를 공유하거나 인터랙티브한 대시보드를 만드는 등 다양한 용도로 활용할 수 있다. 애플리케이션은 웹 브라우저에서 실행되며, 파이썬 코드와 함께 작동하기 때문에 개발자들이 쉽게 웹 애플리케이션을 구축할 수 있다.

간단한 사용법 알아보기

# app.py
import streamlit as st

st.title("Hello world")

터미널에서 아래의 코드를 입력하면 다음과 같이 로컬호스트 서버가 실행된다.
streamlit run app.py
...
    </summary>
  

  </entry>

</feed>


